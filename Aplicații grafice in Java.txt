1)Scrieți o aplicație de tip Frame în care afișați într-un Panel numele vostru și grupa din care faceți parte. 
Textul va fi de culoare albastră și centrat atât pe orizontală, cât și pe verticală, ținând cont de dimensiunea 
panelului.

import java.awt.Canvas;
import java.awt.Color;
import java.awt.Component;
import java.awt.FlowLayout;
import java.awt.Frame;
import java.awt.Graphics;
import java.awt.event.WindowListener;
import java.awt.event.WindowEvent;
import java.awt.Dimension;
import java.awt.image.BufferedImage;
import java.awt.Font;

class MyFrame extends Frame implements WindowListener{
	MyCanvas canvas;
	
	MyFrame(String title){
		super(title);
		
		setLayout(new FlowLayout());
		canvas = new MyCanvas();
		add(canvas);
		
	this.addWindowListener(this);
		
		setSize(500, 500);
		setVisible(true);
	}
	@Override
	public void windowActivated(WindowEvent arg0) {
		// TODO Auto-generated method stub
		
	}
	@Override
	public void windowClosed(WindowEvent arg0) {
		// TODO Auto-generated method stub
		
	}
	@Override
	public void windowClosing(WindowEvent arg0) {
		System.exit(1);
		
	}
	@Override
	public void windowDeactivated(WindowEvent arg0) {
		// TODO Auto-generated method stub
		
	}
	@Override
	public void windowDeiconified(WindowEvent arg0) {
		// TODO Auto-generated method stub
		
	}
	@Override
	public void windowIconified(WindowEvent arg0) {
		// TODO Auto-generated method stub
	
	}
	@Override
	public void windowOpened(WindowEvent arg0) {
		// TODO Auto-generated method stub
		
	}

	

}

class MyCanvas extends Canvas{
	Graphics g;
	BufferedImage bi = null;
	Font f;
	MyCanvas(){
		this.setSize(new Dimension(700, 700));
		this.setBackground(new Color(255, 255, 255));
		
		bi = new BufferedImage(500, 400, BufferedImage.TYPE_INT_ARGB);	

		drawIntoImage();
	}

	public void drawIntoImage() {
		Graphics g = bi.getGraphics();
		g.setColor(Color.blue);
		g.drawString("Manolache Bogdan, Grupa 2127",280,390);
	}
	@Override
	public void paint(Graphics g) {
		g.drawImage(bi, 1, 1, this);
	}
}
class Problema1{
	public static void main(String...strings){
		MyFrame frame = new MyFrame("Problema1");	
	}
}


2)Scrieți o aplicație de tip Frame care va desena într-un Canvas un cerc de culoare roșie tangent la 
dimensiunea cea mai mică (înălțime, lățime) a componentei Canvas.


import java.awt.Canvas;
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.Frame;
import java.awt.Graphics;
import java.awt.event.WindowListener;
import java.awt.event.WindowEvent;
import java.awt.Dimension;

class MyFrame extends Frame implements WindowListener{
  
	MyCanvas canvas;
	
	MyFrame(String title){
		super(title);
		
		setLayout(new FlowLayout());
		canvas = new MyCanvas();
		add(canvas);
		
		this.addWindowListener(this);
		
		setSize(300, 300);
		setVisible(true);
	}
	@Override
	public void windowActivated(WindowEvent arg0) {
		// TODO Auto-generated method stub
		
	}
	@Override
	public void windowClosed(WindowEvent arg0) {
		// TODO Auto-generated method stub
		
	}
	@Override
	public void windowClosing(WindowEvent arg0) {
		System.exit(1);
		
	}
	@Override
	public void windowDeactivated(WindowEvent arg0) {
		// TODO Auto-generated method stub
		
	}
	@Override
	public void windowDeiconified(WindowEvent arg0) {
		// TODO Auto-generated method stub
		
	}
	@Override
	public void windowIconified(WindowEvent arg0) {
		// TODO Auto-generated method stub
		
	}
	@Override
	public void windowOpened(WindowEvent arg0) {
		// TODO Auto-generated method stub
		
	}

}

class MyCanvas extends Canvas{
	Graphics g;
	MyCanvas(){
		this.setSize(new Dimension(195, 200));
		this.setBackground(new Color(255, 255, 1));
		}
	public void paint(Graphics g) {
		int x, y;
		g.setColor(Color.red);
		g.drawOval(10, 10, 185, 190);
		g.fillOval(10,10,185,190);
	}
}


public class Problema2{
	public static void main(String...strings){
		
		MyFrame frame = new MyFrame("Problema2");
		
	}
}
